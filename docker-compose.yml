# Resonance.ai Breakout Scanner - Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: resonance-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: resonance_scanner
      POSTGRES_USER: scanner_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scanner_user -d resonance_scanner"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Resonance Scanner Application
  resonance-scanner:
    build: .
    container_name: resonance-scanner
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      
      # Database connection (separate components to avoid URL parsing issues)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: resonance_scanner
      DB_USER: scanner_user
      DB_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
      
      # Optional Discord Integration
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL:-}
      
      # Optional Email Alerts
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      
      # Scanner Configuration
      DEFAULT_SCAN_MODE: ${DEFAULT_SCAN_MODE:-fast}
      MAX_CONCURRENT_SCANS: ${MAX_CONCURRENT_SCANS:-10}
      
    volumes:
      # Persistent data and logs
      - scanner_data:/app/data
      - scanner_logs:/app/logs
      
    depends_on:
      postgres:
        condition: service_healthy
        
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/configurations || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  scanner_data:
    driver: local
  scanner_logs:
    driver: local

networks:
  default:
    name: resonance-network